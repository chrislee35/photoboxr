#!/usr/bin/env ruby
require 'photoboxr'
require 'slop'

opts = Slop::Options.new
opts.banner = "usage: photoboxr [options] ..."
opts.separator ""
opts.separator "Command line options:"
opts.bool "-h", "--help", "Help" do 
    puts opts
    exit
end
opts.string "-i", "--indir", "Directories to find media", required: true
opts.string "-o", "--outdir", "Directory to build web pages and thumbnails into", required: true
opts.string "-t", "--template", "Template to use for building site, defaults to 'boring'", default: 'boring'
opts.bool "-x", "--no-photos", "Turns off the processing of photos" do
    PhotoBoxr::Directory.set_config('process_photos', false)
end
opts.bool "-N", "--no-videos", "Turns off the processing of videos" do
    PhotoBoxr::Directory.set_config('process_videos', false)
end
opts.bool "-n", "--no-notes", "Turns off the processing of notes" do
    PhotoBoxr::Directory.set_config('process_notes', false)
end
opts.bool "-v", "--printdirectory", "Prints each directory processed" do
    PhotoBoxr::Directory.set_config('print_directory', true)
end
opts.bool "-V", "--printitems", "Prints each photo, video, or note processed" do
    PhotoBoxr::Directory.set_config('print_item', true)
end

parser = Slop::Parser.new(opts)
result = parser.parse(ARGV)
d = PhotoBoxr::Directory.new(result[:indir], result[:outdir], result[:indir])
templates = PhotoBoxr::TemplateManager.get_templates(result[:template])
d.generate(templates)
d.print_stats
